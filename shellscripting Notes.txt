comparison operators

equal -eq
grater than -gt
less than -lt
grater than equal to -ge
less than equal to -le

logical operators
and &&
or `
not !

echo
single quote cant print variables u have to use double quote for that
to print variable use $ before the variable  ex. $a, $b

condition
syntax for if-else 
if[ condition];
then
command/expression
else
command/expression
fi

readonly-
if the value of any variable is overrided then by using readonly we can avoid changing the value of that variable


loops-
For loop(when you know the number of iterations)(cant use without no. of iterations)
1.syntax-
for variable in list
do
expression
done

Ex.
for i in 1 2 3 4
do
echo "$i"
done

2.syntax-( {} is range )
for variable in {start..end}
do
expression
done


Ex.
for i in {1..4}

echo "i"
done

3.syntax
for((start; condition; increment))
do
expression
done

Ex.
for$((i=0; i << 10; i++))
do
echo "$i"
done

nested for loop-
syntax-
for((start; end; increment))
do
for((start; end; increment))
do
expressions
done
done

while loop(when you don't know or may be know the number of iterations)
syntax-
initialization
while [ condition ]
do 
expression
increment/decrement
done

until loop
syntax-
initialization
until [condition]
do
increment/decrement
done


functions-
syntax-

function abc(){
commands/expression
   echo " hello, dsvuhbvshcgvudgfh "
}

abc arguments 






